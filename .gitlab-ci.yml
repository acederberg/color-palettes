# You might want to look at this very helpful document about the appropraite structure of this yaml file:
# https://docs.gitlab.com/ee/ci/yaml/#include

.api_changes : &api_changes 
  - .gitlab-ci.yml
  - ./api/src
  - ./api/test
  - ./api/tsconfig.json
  - ./api/package.json


.api_rules : &api_rules
  # About complex rules : https://docs.gitlab.com/ee/ci/jobs/job_control.html#complex-rules
  # Roughly speaking, list items are 'or'ed together while the boolean of each list item in the 'and'ing of its pieces.
  - if : '$ALL == "1"'
  - changes : *api_changes
  - when : 'manual'


variables :
  GIT_STRATAGY : none
  ALL : 1


stages :
  - get-git
  - containers
  - install
  - test
  - publish-fetchers
  - build


.pre :
  script :
    - echo 'Killing all active containers...'
    - docker stop $( docker ps -aq ) 
    - docker rm $( docker ps -aq )


get-git :
  tags :
    - api
    - build 
    - publish
    - test
  stage : get-git
  script :
    # This must be done since this uses the local runner for docker commands which are ubiquitas.
    - echo $PWD
    - echo "Manually fetching git repository" 
    - source ~/.bashrc
    - >
      if ( 
        test $( ls -a | grep --max-count=1 .git | wc --words ) -eq 1 
      ); 
      then 
        echo 'Fetching git repository...'
        git restore .
        git fetch && git checkout origin/main
      else
        echo 'Cloning git repository...'
        echo $GIT_IS_ALIVE
        git clone https://acederberg:$RUNNER_TOKEN_FOR_PALLETES@gitlab.com/adrn.cederberg123/color-palletes.git .
        git checkout origin/main
      fi


containers-api :
  rules : *api_rules
  tags :
    - api
    - build
    - docker
    - test
    - publish
  stage : containers
  script :
    # Since linux is stupid I have to set correct permissions on the script first.
    # For whatever reason the chowning things as node results in ownership by the vagrant user.
    # It looks like the problem arizes from the vagrant user and the node user both having an id of 1000
    # Run docker compose file, fix the stupid permissions issue.
    - docker compose --file ./api/docker-compose.yaml up --build --detach
    - docker exec -u 0 api usermod --uid 998 node 
    - docker exec -u 0 api groupmod --gid 998 node


installs-api :
  # Should not waste the time if we do not need to
  rules : *api_rules
  tags : 
    - api 
    - build
    - test
    - publish
  stage : install
  script :
    # while the node user has an id of 998. So to fix this problem the id of the node user must be set to 998.
    - docker exec api npm install .
  artifacts :
    untracked : true
    paths :
      - ./api/node_modules
  cache :
    untracked : true
    paths :
      - ./api/node_modules


test-api :
  rules : *api_rules
  tags :
    - api
    - build
    - test
    - publish
  stage : test
  script :
    - echo $PWD
    - cd api
    - echo 'DB_URI=mongodb://dev:goofy@mongodb?directConnection=true&serverSelectionTimeoutMS=2000' > .env.test
    - echo 'API_URI=http://localhost:1337' >> .env.test
    - echo "API_ALL_KEY='This enables you to use the \"all\" field'" >> .env.test
    # This one must be run in the docker contain explicitly
    - docker exec api npm run test-api
    # This one runs various commands in docker containers such as building, starting the api, and running tests.
    - chmod -R +x ./scripts
    - FETCHERS_AWAIT_API_TIME=15 FETCHERS_TESTS_LOOP=0 LAZY=0 ./scripts/test_fetchers.sh
  artifacts :
    untracked : true
    paths :
      - api/coverage
      - api/.env.test


publish-api :
  stage : publish-fetchers
  tags :
    - api
    - publish
  rules : *api_rules
  script :
    # Versioning should be done on commit, not in the pipeline.
    - echo $PWD
    - cd api
    - |
      if ( 
        test $( git diff package.json | grep '[+] *version' | wc --word ) -gt 0
      ); 
      then
        npm login --username $NPM_USERNAME --password $NPM_PASSWORD
        npm run build
        npm publish
      else
        echo "Version has not changed. Not publishing."
      fi
  

build-api :
  stage : build
  tags :
    - build
  only :
    changes : 
      - .gitlab-ci.yml
      - ./api/src
      - ./api/Dockerfile.prod
  script :
    - echo "Building..."


.post :
  script :
    - docker stop $( docks ps -aq )
    - docker rm $( docker ps -aq )
    - npm run destory-artifacts
